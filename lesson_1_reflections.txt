How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

* A manual commit allows you to tell the computer when to look for code changes that may be suspect.  When other tools do it automatically, you're not sure what to look for when you have to go back and fix something.
* Version control would help me be more confident to do stuff in case I do break something.
* I would use Git for manual version control.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
* By having the complete history, you could copy needed code.  
* You can learn from past mistakes.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
* Git is an application with coding changes were in mind.  Google docs is a file/folder tool so it makes sense that they're treated seperately.

